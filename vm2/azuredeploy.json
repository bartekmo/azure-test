{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"allowedValues": [
				"West US",
				"East US",
				"West Europe",
				"East Asia",
				"Southeast Asia"
			],
			"metadata": {
				"description": "Location where resources will be deployed"
			}
		},
		"newStorageAccountName": {
			"type": "string",
			"defaultValue" : "gw-ng60",
			"metadata": {
				"description": "Name of the storage account"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"metadata": {
				"description": "Type of the storage account"
			}
		},
		"publicIPName": {
			"type": "string",
			"defaultValue" : "gw-acpf",
			"metadata": {
				"description": "Name of Public IP"
			}
		},
		"publicIPAddressType": {
			"type": "string",
			"defaultValue": "Dynamic",
			"allowedValues": [
				"Dynamic",
				"Static"
			],
			"metadata": {
				"description": "Type of Public IP"
			}
		},
		"vmStorageAccountContainerName": {
			"type": "string",
			"defaultValue": "vhds",
			"metadata": {
				"description": "name of Storage Account container for the VHDs"
			}
		},
		"vmName": {
			"type": "string",
			"defaultValue": "ngfw-xx",
			"metadata": {
				"description": "Name of the VM"
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Basic_A1",
			"metadata": {
				"description": "Size of the VM"
			}
		},
		"imagePublisher": {
			"type": "string",
			"defaultValue": "barracudanetworks",
			"metadata": {
				"description": "Image Publisher"
			}
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "ng60",
			"metadata": {
				"description": "Image Offer"
			}
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "byol",
			"metadata": {
				"description": "Image SKU"
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue" : "admin",
			"metadata": {
				"description": "Admin Username"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"defaultValue" : "a12345!",
			"metadata": {
				"description": "Admin Password"
			}
		},
		"virtualNetworkName": {
			"type": "string",
			"defaultValue" : "nw-share-01",
			"metadata": {
				"description": "Name of Virtual Network"
			}
		},
		"addressPrefix": {
			"type": "string",
			"defaultValue": "10.0.0.0/16",
			"metadata": {
				"description": "VNET address prefix in CIDR format"
			}
		},
		"subnet1Name": {
			"type": "string",
			"defaultValue": "Subnet-1",
			"metadata": {
				"description": "Subnet 1 Name"
			}
		},
		"subnet1Prefix": {
			"type": "string",
			"defaultValue": "10.0.0.0/24",
			"metadata": {
				"description": "Subnet 1 address prefix in CIDR format"
			}
		},
		"nicName": {
			"type": "string",
			"defaultValue" : "vceth0",
			"metadata": {
				"description": "Network Interface name"
			}
		}
	},
	"variables": {
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
		"subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('newStorageAccountName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('publicIPName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[parameters('virtualNetworkName')]",
			"location": "[parameters('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[parameters('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[parameters('subnet1Name')]",
						"properties": {
							"addressPrefix": "[parameters('subnet1Prefix')]"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[parameters('nicName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPName'))]",
				"[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPName'))]"
							},
							"subnet": {
								"id": "[variables('subnet1Ref')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computername": "[parameters('vmName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"osDisk" : {
						"name": "osdisk",
						"osType" : "Linux",
						"image" : {
							"uri" : "[concat('/',subscription().subscriptionId,'/services/images/','810d5f35ce8748c686feabed1344911c__BarracudaNGFirewall-6.0.1-033.vhd')]"
						},
						"vhd": {
							"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','ng60-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"inputEndpoints" : [
						{
							"endpointName" : "MGMT",
							"privatePort" : 807,
							"publicPort" : 807,
							"protocol" : "tcp"
						},
						{
							"endpointName" : "SSH",
							"privatePort" : 22,
							"publicPort" : 22,
							"protocol" : "tcp"
						}
					],
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
						}
					]
				}
			}
		}
	]
}
